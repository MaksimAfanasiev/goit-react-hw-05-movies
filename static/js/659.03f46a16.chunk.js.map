{"version":3,"file":"static/js/659.03f46a16.chunk.js","mappings":"+SAAMA,EAAM,mCACNC,EAAW,+BAKXC,EAAe,UAMRC,EAAc,mCAAG,oGACRC,MAAM,GAAD,OAAIH,GAAJ,OATP,sBASO,oBAAsCD,IAC5DK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,WAHO,cACtBC,EADsB,yBAMrBA,GANqB,2CAAH,qDAWdC,EAAS,mCAAG,WAAMC,GAAN,uFACHR,MAAM,GAAD,OACpBH,GADoB,OAnBN,gBAmBM,oBACeD,EADf,kBAC4BY,IAElDP,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,WALE,cACjBC,EADiB,yBAOhBA,GAPgB,2CAAH,sDAYTG,EAAe,mCAAG,WAAMC,GAAN,uFACHV,MAAM,GAAD,OAC1BH,GAD0B,OACfC,GADe,OACAY,EADA,oBACcd,IAE1CK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAU,GACJ,IAAMC,EAAmBD,EAAME,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAIzD,OAFc,kBAAQL,GAAR,IAAeE,OAAQD,OARZ,cACvBK,EADuB,yBAatBA,GAbsB,2CAAH,sDAgBfC,EAAU,mCAAG,WAAMR,GAAN,uFACFV,MAAM,GAAD,OACtBH,GADsB,OACXC,GADW,OACIY,EADJ,4BAC0Bd,IAElDK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIA,EAAKe,QALG,cAClBC,EADkB,yBAOjBA,GAPiB,2CAAH,sDAUVC,EAAU,mCAAG,WAAMX,GAAN,uFACFV,MAAM,GAAD,OACtBH,GADsB,OACXC,GADW,OACIY,EADJ,4BAC0Bd,IAElDK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,WALG,cAClBiB,EADkB,yBAOjBA,GAPiB,2CAAH,uD,2HC7DVC,EAAY,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACvB,OACI,kBAAMC,SAAUD,EAAhB,WACI,kBAAOE,KAAK,OAAOV,KAAK,WACxB,mBAAQU,KAAK,SAAb,wBCFCC,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnBC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,wBAEQF,EAAOG,OAAS,GAAKH,EAAOd,KAAI,gBAAGJ,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,MAAP,OAC5B,yBACI,SAAC,KAAD,CAAMC,GAAE,UAAKvB,GAAMwB,MAAO,CAACC,KAAMN,GAAjC,SACKG,KAFAtB,SCsC7B,EAzCe,WACX,OAA0B0B,EAAAA,EAAAA,UAAS,IAAnC,eAAO5B,EAAP,KAAc6B,EAAd,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAOR,EAAP,KAAeU,EAAf,KACA,GAA4BC,EAAAA,EAAAA,MAAnBC,GAAT,eACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAoBR,OAjBAE,EAAAA,EAAAA,YAAU,WACQ,KAAVnC,GAKJD,EAAAA,EAAAA,IAAUC,GAAOP,KAAKqC,GAJlBA,EAAU,MAMf,CAAC9B,IAWAiC,GAEI,SAAC,EAAAG,SAAD,WACI,SAAC,KAAD,OAGJ,iCACI,SAACrB,EAAD,CAAWC,aAhBvB,SAAkBqB,GACdA,EAAEC,iBACFT,EAASQ,EAAEE,OAAOvC,MAAMwC,OACxBR,EAAgB,CAAEhC,MAAOqC,EAAEE,OAAOvC,MAAMwC,QACxCH,EAAEE,OAAOvC,MAAMwC,MAAQ,OAcf,SAACrB,EAAD,CAAYC,OAAQA","sources":["api.js","components/Searchbox/Searchbox.jsx","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["const KEY = 'cdeffe013ca7b4d45618860232929251';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// Endpoints\nconst trendMovies = '/trending/movie/day'; // Популярні\nconst searchMovies = '/search/movie'; // Пошук фільму\nconst movieDetails = '/movie/'; // Деталі про фільм\n// const movieCredits = '/movie/{movie_id}/credits'; // Акторський склад фільму\n// const movieReviews = '/movie/{movie_id}/reviews'; // Відгуки про фільм\n\n//Трендові фільми\n\nexport const getTrendMovies = async () => {\n  const films = await fetch(`${BASE_URL}${trendMovies}?api_key=${KEY}`)\n    .then(resp => resp.json())\n    .then(data => data.results);\n\n  //   console.log(films);\n  return films;\n};\n\n// Пошук фільмів за ключовим словом\n\nexport const getMovies = async query => {\n  const films = await fetch(\n    `${BASE_URL}${searchMovies}?api_key=${KEY}&query=${query}`\n  )\n    .then(resp => resp.json())\n    .then(data => data.results);\n\n  return films;\n};\n\n// Запит повної інформації про фільм\n\nexport const getMovieDetails = async id => {\n  const filmDetails = await fetch(\n    `${BASE_URL}${movieDetails}${id}?api_key=${KEY}`\n  )\n    .then(resp => resp.json())\n    .then(movie => {\n      const normalizedGenres = movie.genres.map(genre => genre.name);\n\n      const newMovie = { ...movie, genres: normalizedGenres };\n\n      return newMovie;\n    });\n\n  return filmDetails;\n};\n\nexport const getCredits = async id => {\n  const credits = await fetch(\n    `${BASE_URL}${movieDetails}${id}/credits?api_key=${KEY}`\n  )\n    .then(resp => resp.json())\n    .then(data => data.cast);\n\n  return credits;\n};\n\nexport const getReviews = async id => {\n  const reviews = await fetch(\n    `${BASE_URL}${movieDetails}${id}/reviews?api_key=${KEY}`\n  )\n    .then(resp => resp.json())\n    .then(data => data.results);\n\n  return reviews;\n};\n","export const Searchbox = ({onFormSubmit}) => {\n    return (\n        <form onSubmit={onFormSubmit}>\n            <input type=\"text\" name=\"query\" />\n            <button type=\"submit\">Search</button>\n        </form>\n    )\n}","import { useLocation, Link } from \"react-router-dom\"\n\nexport const MoviesList = ({ movies }) => {\n    const location = useLocation();\n\n    return (\n        <ul>\n            {\n                movies.length > 0 && movies.map(({ id, title }) => (\n                    <li key={id}>\n                        <Link to={`${id}`} state={{from: location}}>\n                            {title}\n                        </Link>\n                    </li>\n                    )\n                )\n            }\n        </ul>\n    )\n}","import { useState, useEffect, Suspense } from \"react\"\nimport { useSearchParams, Outlet, useParams} from \"react-router-dom\";\nimport { getMovies } from \"api\";\nimport { Searchbox } from \"components/Searchbox/Searchbox\";\nimport { MoviesList } from \"../../components/MoviesList/MoviesList\";\n\nconst Movies = () => {\n    const [query, setQuery] = useState(\"\");\n    const [movies, setMovies] = useState([]);\n    const [, setSearchParams] = useSearchParams();\n    const { movieId } = useParams();\n\n\n    useEffect(() => {\n        if (query === \"\") {\n            setMovies([]);\n            return;\n        }\n\n        getMovies(query).then(setMovies);\n\n    }, [query])\n\n    function onSubmit(e) {\n        e.preventDefault();\n        setQuery(e.target.query.value);\n        setSearchParams({ query: e.target.query.value })\n        e.target.query.value = \"\";\n    }\n\n    return (\n        \n        movieId\n            ?\n            <Suspense>\n                <Outlet />\n            </Suspense>\n            :\n            <>\n                <Searchbox onFormSubmit={onSubmit} />\n            \n                <MoviesList movies={movies}/>\n    \n            </>\n    )\n};\n\nexport default Movies;\n"],"names":["KEY","BASE_URL","movieDetails","getTrendMovies","fetch","then","resp","json","data","results","films","getMovies","query","getMovieDetails","id","movie","normalizedGenres","genres","map","genre","name","filmDetails","getCredits","cast","credits","getReviews","reviews","Searchbox","onFormSubmit","onSubmit","type","MoviesList","movies","location","useLocation","length","title","to","state","from","useState","setQuery","setMovies","useSearchParams","setSearchParams","movieId","useParams","useEffect","Suspense","e","preventDefault","target","value"],"sourceRoot":""}