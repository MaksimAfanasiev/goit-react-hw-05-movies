{"version":3,"file":"static/js/961.9a2eec27.chunk.js","mappings":"+SAAMA,EAAM,mCACNC,EAAW,+BAKXC,EAAe,UAMRC,EAAc,mCAAG,oGACRC,MAAM,GAAD,OAAIH,GAAJ,OATP,sBASO,oBAAsCD,IAC5DK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,WAHO,cACtBC,EADsB,yBAMrBA,GANqB,2CAAH,qDAWdC,EAAS,mCAAG,WAAMC,GAAN,uFACHR,MAAM,GAAD,OACpBH,GADoB,OAnBN,gBAmBM,oBACeD,EADf,kBAC4BY,IAElDP,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,WALE,cACjBC,EADiB,yBAOhBA,GAPgB,2CAAH,sDAYTG,EAAe,mCAAG,WAAMC,GAAN,uFACHV,MAAM,GAAD,OAC1BH,GAD0B,OACfC,GADe,OACAY,EADA,oBACcd,IAE1CK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAU,GACJ,IAAMC,EAAmBD,EAAME,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAIzD,OAFc,kBAAQL,GAAR,IAAeE,OAAQD,OARZ,cACvBK,EADuB,yBAatBA,GAbsB,2CAAH,sDAgBfC,EAAU,mCAAG,WAAMR,GAAN,uFACFV,MAAM,GAAD,OACtBH,GADsB,OACXC,GADW,OACIY,EADJ,4BAC0Bd,IAElDK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIA,EAAKe,QALG,cAClBC,EADkB,yBAOjBA,GAPiB,2CAAH,sDAUVC,EAAU,mCAAG,WAAMX,GAAN,uFACFV,MAAM,GAAD,OACtBH,GADsB,OACXC,GADW,OACIY,EADJ,4BAC0Bd,IAElDK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,WALG,cAClBiB,EADkB,yBAOjBA,GAPiB,2CAAH,uD,qFCnBvB,UAtCqB,WAAO,IAAD,IACfC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOd,EAAP,KAAce,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MAGXC,EAAQ,qBAFGC,EAAAA,EAAAA,MAESC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,WAEzCC,EAAAA,EAAAA,YAAU,YAAQxB,EAAAA,EAAAA,IAAgBc,GAAStB,KAAKyB,KAAa,CAACH,IAE9D,IAAQW,EAAqEvB,EAArEuB,MAAOC,EAA8DxB,EAA9DwB,aAAcC,EAAgDzB,EAAhDyB,SAAUvB,EAAsCF,EAAtCE,OAAQwB,EAA8B1B,EAA9B0B,YAAaC,EAAiB3B,EAAjB2B,aACtDC,EAAc,IAAIC,KAAKF,GAAcG,cACrCC,EAAaL,EAAc,kCAAoCA,EAAc,GAEnF,OACIH,IACA,iCACI,mBAAQS,KAAK,SAASC,QAAS,kBAAMjB,EAASE,IAA9C,sBACA,0BAAKK,EAAL,KAAcK,EAAd,QACA,wCAAgBM,KAAKC,MAAqB,GAAfX,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCACA,uBAAIvB,EAAOkC,KAAK,SAChB,gBAAKC,IAAKN,EAAYO,IAAI,YAE1B,oDACA,2BACI,yBAAI,SAAC,KAAD,CAAMC,GAAI,OAAV,qBACJ,yBAAI,SAAC,KAAD,CAAMA,GAAI,UAAV,2BAER,SAAC,EAAAC,SAAD,WACI,SAAC,KAAD","sources":["api.js","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["const KEY = 'cdeffe013ca7b4d45618860232929251';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// Endpoints\nconst trendMovies = '/trending/movie/day'; // Популярні\nconst searchMovies = '/search/movie'; // Пошук фільму\nconst movieDetails = '/movie/'; // Деталі про фільм\n// const movieCredits = '/movie/{movie_id}/credits'; // Акторський склад фільму\n// const movieReviews = '/movie/{movie_id}/reviews'; // Відгуки про фільм\n\n//Трендові фільми\n\nexport const getTrendMovies = async () => {\n  const films = await fetch(`${BASE_URL}${trendMovies}?api_key=${KEY}`)\n    .then(resp => resp.json())\n    .then(data => data.results);\n\n  //   console.log(films);\n  return films;\n};\n\n// Пошук фільмів за ключовим словом\n\nexport const getMovies = async query => {\n  const films = await fetch(\n    `${BASE_URL}${searchMovies}?api_key=${KEY}&query=${query}`\n  )\n    .then(resp => resp.json())\n    .then(data => data.results);\n\n  return films;\n};\n\n// Запит повної інформації про фільм\n\nexport const getMovieDetails = async id => {\n  const filmDetails = await fetch(\n    `${BASE_URL}${movieDetails}${id}?api_key=${KEY}`\n  )\n    .then(resp => resp.json())\n    .then(movie => {\n      const normalizedGenres = movie.genres.map(genre => genre.name);\n\n      const newMovie = { ...movie, genres: normalizedGenres };\n\n      return newMovie;\n    });\n\n  return filmDetails;\n};\n\nexport const getCredits = async id => {\n  const credits = await fetch(\n    `${BASE_URL}${movieDetails}${id}/credits?api_key=${KEY}`\n  )\n    .then(resp => resp.json())\n    .then(data => data.cast);\n\n  return credits;\n};\n\nexport const getReviews = async id => {\n  const reviews = await fetch(\n    `${BASE_URL}${movieDetails}${id}/reviews?api_key=${KEY}`\n  )\n    .then(resp => resp.json())\n    .then(data => data.results);\n\n  return reviews;\n};\n","import { useState, useEffect, Suspense } from \"react\";\nimport { useParams, Link, Outlet, useNavigate, useLocation } from \"react-router-dom\";\nimport { getMovieDetails } from \"../../api\";\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState({});\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const backLink = location.state?.from ?? \"/movies\";\n\n    useEffect(() => { getMovieDetails(movieId).then(setMovie) }, [movieId]);\n\n    const { title, vote_average, overview, genres, poster_path, release_date } = movie;\n    const releaseYear = new Date(release_date).getFullYear();\n    const posterLink = poster_path ? \"https://image.tmdb.org/t/p/w500\" + poster_path : \"\";\n    \n    return (\n        title &&\n        <>\n            <button type=\"button\" onClick={() => navigate(backLink)}>Go back</button>\n            <h1>{title} ({releaseYear})</h1>\n            <p>User score: {Math.round(vote_average * 10)}%</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <p>{genres.join(\", \")}</p>\n            <img src={posterLink} alt=\"Poster\"></img>\n\n            <h3>Additional information</h3>\n            <ul>\n                <li><Link to={\"cast\"}>Cast</Link></li>\n                <li><Link to={\"reviews\"}>Reviews</Link></li>\n            </ul>\n            <Suspense>\n                <Outlet />\n            </Suspense>\n        </>\n    )\n};\n\nexport default MovieDetails;\n"],"names":["KEY","BASE_URL","movieDetails","getTrendMovies","fetch","then","resp","json","data","results","films","getMovies","query","getMovieDetails","id","movie","normalizedGenres","genres","map","genre","name","filmDetails","getCredits","cast","credits","getReviews","reviews","movieId","useParams","useState","setMovie","navigate","useNavigate","backLink","useLocation","state","from","useEffect","title","vote_average","overview","poster_path","release_date","releaseYear","Date","getFullYear","posterLink","type","onClick","Math","round","join","src","alt","to","Suspense"],"sourceRoot":""}