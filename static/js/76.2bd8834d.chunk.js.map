{"version":3,"file":"static/js/76.2bd8834d.chunk.js","mappings":"8SAAMA,EAAM,mCACNC,EAAW,+BAKXC,EAAe,UAMRC,EAAc,mCAAG,oGACRC,MAAM,GAAD,OAAIH,GAAJ,OATP,sBASO,oBAAsCD,IAC5DK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,WAHO,cACtBC,EADsB,yBAMrBA,GANqB,2CAAH,qDAWdC,EAAS,mCAAG,WAAMC,GAAN,uFACHR,MAAM,GAAD,OACpBH,GADoB,OAnBN,gBAmBM,oBACeD,EADf,kBAC4BY,IAElDP,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,WALE,cACjBC,EADiB,yBAOhBA,GAPgB,2CAAH,sDAYTG,EAAe,mCAAG,WAAMC,GAAN,uFACHV,MAAM,GAAD,OAC1BH,GAD0B,OACfC,GADe,OACAY,EADA,oBACcd,IAE1CK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAU,GACJ,IAAMC,EAAmBD,EAAME,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAIzD,OAFc,kBAAQL,GAAR,IAAeE,OAAQD,OARZ,cACvBK,EADuB,yBAatBA,GAbsB,2CAAH,sDAgBfC,EAAU,mCAAG,WAAMR,GAAN,uFACFV,MAAM,GAAD,OACtBH,GADsB,OACXC,GADW,OACIY,EADJ,4BAC0Bd,IAElDK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIA,EAAKe,QALG,cAClBC,EADkB,yBAOjBA,GAPiB,2CAAH,sDAUVC,EAAU,mCAAG,WAAMX,GAAN,uFACFV,MAAM,GAAD,OACtBH,GADsB,OACXC,GADW,OACIY,EADJ,4BAC0Bd,IAElDK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAI,OAAIA,EAAKC,WALG,cAClBiB,EADkB,yBAOjBA,GAPiB,2CAAH,uD,wGC5DvB,EAA8B,iC,SCEjBC,EAAc,SAAC,GAAiB,IAAfD,EAAc,EAAdA,QAC1B,OACI,eAAIE,UAAWC,EAAf,SACKH,EAAQR,KAAI,SAAAY,GACT,IAAQC,EAAwBD,EAAxBC,OAAQC,EAAgBF,EAAhBE,QAASlB,EAAOgB,EAAPhB,GACzB,OACI,2BACI,wBAAKiB,KACL,uBAAIC,MAFClB,SCPhBmB,EAAS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACrB,OACI,uBAAIA,KCmBZ,EAjBgB,WACZ,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOT,EAAP,KAAgBU,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACNd,EAAAA,EAAAA,IAAWY,GAAShC,KAAK+B,KAC1B,CAACC,IAGAX,EAAQc,OAAS,GAEb,SAACb,EAAD,CAAaD,QAASA,KAEtB,SAACO,EAAD,CAAQC,KAAM","sources":["api.js","webpack://react-homework-template/./src/components/ReviewsList/ReviewsList.module.css?071b","components/ReviewsList/ReviewsList.jsx","components/Notice/Notice.jsx","pages/Reviews/Reviews.jsx"],"sourcesContent":["const KEY = 'cdeffe013ca7b4d45618860232929251';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n// Endpoints\nconst trendMovies = '/trending/movie/day'; // Популярні\nconst searchMovies = '/search/movie'; // Пошук фільму\nconst movieDetails = '/movie/'; // Деталі про фільм\n// const movieCredits = '/movie/{movie_id}/credits'; // Акторський склад фільму\n// const movieReviews = '/movie/{movie_id}/reviews'; // Відгуки про фільм\n\n//Трендові фільми\n\nexport const getTrendMovies = async () => {\n  const films = await fetch(`${BASE_URL}${trendMovies}?api_key=${KEY}`)\n    .then(resp => resp.json())\n    .then(data => data.results);\n\n  //   console.log(films);\n  return films;\n};\n\n// Пошук фільмів за ключовим словом\n\nexport const getMovies = async query => {\n  const films = await fetch(\n    `${BASE_URL}${searchMovies}?api_key=${KEY}&query=${query}`\n  )\n    .then(resp => resp.json())\n    .then(data => data.results);\n\n  return films;\n};\n\n// Запит повної інформації про фільм\n\nexport const getMovieDetails = async id => {\n  const filmDetails = await fetch(\n    `${BASE_URL}${movieDetails}${id}?api_key=${KEY}`\n  )\n    .then(resp => resp.json())\n    .then(movie => {\n      const normalizedGenres = movie.genres.map(genre => genre.name);\n\n      const newMovie = { ...movie, genres: normalizedGenres };\n\n      return newMovie;\n    });\n\n  return filmDetails;\n};\n\nexport const getCredits = async id => {\n  const credits = await fetch(\n    `${BASE_URL}${movieDetails}${id}/credits?api_key=${KEY}`\n  )\n    .then(resp => resp.json())\n    .then(data => data.cast);\n\n  return credits;\n};\n\nexport const getReviews = async id => {\n  const reviews = await fetch(\n    `${BASE_URL}${movieDetails}${id}/reviews?api_key=${KEY}`\n  )\n    .then(resp => resp.json())\n    .then(data => data.results);\n\n  return reviews;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"ReviewsList_reviewsList__MzOw+\"};","import css from \"./ReviewsList.module.css\";\nimport PropTypes from \"prop-types\";\n\nexport const ReviewsList = ({ reviews }) => {\n    return (\n        <ul className={css.reviewsList}>\n            {reviews.map(review => {\n                const { author, content, id } = review;\n                return(\n                    <li key={id}>\n                        <h3>{author}</h3>\n                        <p>{content}</p>\n                    </li>\n                )\n            })\n            }\n        </ul>\n    )\n}\n\nReviewsList.propTypes = {\n    reviews: PropTypes.arrayOf(PropTypes.object),\n}","import PropTypes from \"prop-types\"\n\nexport const Notice = ({ text }) => {\n    return (\n        <p>{text}</p>\n    )\n}\n\nNotice.propTypes = {\n    text: PropTypes.string.isRequired,\n}","import { getReviews } from \"../../api\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { ReviewsList } from \"../../components/ReviewsList/ReviewsList\";\nimport { Notice } from \"components/Notice/Notice\";\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        getReviews(movieId).then(setReviews)\n    }, [movieId]);\n\n    return (\n        reviews.length > 0\n            ?\n            <ReviewsList reviews={reviews} />\n            :\n            <Notice text={\"We don`t have any reviews for this movie!\"} />\n    )\n};\n\nexport default Reviews;"],"names":["KEY","BASE_URL","movieDetails","getTrendMovies","fetch","then","resp","json","data","results","films","getMovies","query","getMovieDetails","id","movie","normalizedGenres","genres","map","genre","name","filmDetails","getCredits","cast","credits","getReviews","reviews","ReviewsList","className","css","review","author","content","Notice","text","useState","setReviews","movieId","useParams","useEffect","length"],"sourceRoot":""}